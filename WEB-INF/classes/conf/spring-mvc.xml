<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:cache="http://www.springframework.org/schema/cache" xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/cache
       http://www.springframework.org/schema/cache/spring-cache.xsd 
	   http://www.springframework.org/schema/aop 
	   https://www.springframework.org/schema/aop/spring-aop.xsd">
       
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="ths.**.web,ths.**.api,ths.jdp.report" use-default-filters="false">
   		<context:include-filter expression="org.springframework.stereotype.Controller"  type="annotation" />
        <context:include-filter expression="org.springframework.web.bind.annotation.ControllerAdvice" type="annotation"/>
    </context:component-scan>
    
    <!-- spring MVC 缓存开启 -->
	<cache:annotation-driven cache-manager="cacheManager" key-generator="customKeyGenerator"  cache-resolver="jdpCacheResolver"/>
	
	<!--处理静态资源 -->
<!-- 	<mvc:default-servlet-handler />-->

	<!-- 全局异常配置 -->
    <bean id="exceptionResolver" class="ths.jdp.core.exception.resolver.ThsExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Exception">_common/error_500</prop>
                <prop key="java.lang.Throwable">_common/error_500</prop>
            </props>
        </property>
        <property name="statusCodes">
            <props>
                <prop key="/error/500.html">500</prop>
				<prop key="/error/404.html">404</prop>
            </props>
        </property>
        <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
        <property name="warnLogCategory" value="WARN"></property>
        <!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
        <property name="defaultErrorView" value="/error/500.html"></property>
        <!-- 默认HTTP状态码 -->
        <property name="defaultStatusCode" value="500"></property>
    </bean>
 
	<!--信息转换 - 开始 -->
	<!--RequestMappingHandlerAdapter -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<ref bean="stringHttpMessageConverter" />
			<ref bean="marshallingHttpMessageConverter" />
			<ref bean="mappingJackson2HttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<constructor-arg value="UTF-8" index="0"></constructor-arg>
		<!-- 避免出现乱码 -->
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<bean id="marshallingHttpMessageConverter"
		class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		<property name="marshaller" ref="castorMarshaller" />
		<property name="unmarshaller" ref="castorMarshaller" />
	</bean>

	<bean id="mappingJackson2HttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json</value>
				<value>application/xml</value>
				<value>text/html</value>
				<value>text/plain</value>
				<value>text/xml</value>
			</list>
		</property>
	</bean>

	<bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller" />
	<!--信息转换 - 结束 -->
    
	<!--内容协商 -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager">
		<bean class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
			<!-- 关闭扩展名至mimeType的映射,即不支持/user.json => application/json -->
			<property name="favorPathExtension" value="false" />
			<!-- 用于开启 /userinfo/123?format=json 的支持 -->
			<property name="favorParameter" value="true" />
			<property name="parameterName" value="format" />
			<!-- 忽略Accept Header -->
			<property name="ignoreAcceptHeader" value="true" />
			<!--扩展名到MIME的映射；favorPathExtension或favorParameter是true时起作用 -->
			<property name="mediaTypes"> 
				<map>
					<entry key="json" value="application/json" />
					<entry key="xml" value="application/xml" />
					<entry key="html" value="text/html" />
				</map>
			</property>
			<!-- 默认的content type -->
			<property name="defaultContentType" value="text/html" />
		</bean>
		</property>
		<property name="viewResolvers">
			<list>
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass"
						value="org.springframework.web.servlet.view.JstlView" />
					<property name="prefix" value="/WEB-INF/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller" ref="castorMarshaller" />
				</bean>
			</list>
		</property>
	</bean>

	<!--文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000000" />
	</bean>

	<!--默认首页 -->
	<!-- <mvc:view-controller path="/" view-name="redirect:./portal/ou/loginpage.vm"/> -->
	<aop:aspectj-autoproxy/>
</beans>
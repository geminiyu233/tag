<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/tx
 						http://www.springframework.org/schema/tx/spring-tx.xsd
 						http://www.springframework.org/schema/cache
     					http://www.springframework.org/schema/cache/spring-cache.xsd
     					http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd">

	 <!-- redis 相关配置 -->  
     <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
         <property name="maxIdle" value="${redis.maxIdle}" />   
         <property name="maxWaitMillis" value="${redis.maxWait}" />  
         <property name="testOnBorrow" value="${redis.testOnBorrow}" />
     </bean>
      <!-- redis 集群配置 开始
	 <bean id="redisSentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
      	<property name="master">
            <bean class="org.springframework.data.redis.connection.RedisNode">
                <property name="name" value="mymaster"></property>
            </bean>
        </property>
         <property name="sentinels">
            <set>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.sentinel1.ip}"></constructor-arg> 
                <constructor-arg name="port" value="${redis.sentinel1.port}"></constructor-arg>      
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.sentinel2.ip}"/>
                    <constructor-arg name="port" value="${redis.sentinel2.port}"/>               
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode"> 
                    <constructor-arg name="host" value="${redis.sentinel3.ip}"/>
                    <constructor-arg name="port" value="${redis.sentinel3.port}"/>               
                </bean>
            </set>
        </property>
      </bean>

     <bean id="cacheManagerFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" p:password="${redis.sentinel.pass}" >
       	<constructor-arg name="sentinelConfig" ref="redisSentinelConfiguration"/>
       	<constructor-arg name="poolConfig" ref="poolConfig"/> 
       </bean>  -->  
     <!-- redis 集群配置 结束-->  
     
     <!-- redis 单节点配置 开始-->  
     <bean id="cacheManagerFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
       p:host-name="${spring.ths.nacos.redis.hostName}" p:port="${spring.ths.nacos.redis.port}" p:password="${spring.ths.nacos.redis.password}" p:pool-config-ref="poolConfig" p:database="${spring.ths.nacos.redis.database}"/>
   
  	 <!-- redis 单节点配置 结束-->  
  	 
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
   		<property name="connectionFactory" ref="cacheManagerFactory" />
        <property name="keySerializer" ref="stringRedisSerializer"/>  
    	<property name="valueSerializer" ref="jdpJsonRedisSerializer"/> 
    </bean>

	<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg ref="redisTemplate" />
		<!-- <constructor-arg name="cacheNames">  
			<set>
				<value>JDP.CACHE</value>
           	</set>  
       	</constructor-arg> -->
       	<!-- 默认缓存超时时间 -->
       	<property name="defaultExpiration" value="36000"></property>
       	<!-- 自定义缓存超时时间 -->
		<!-- <property name="expires">
			<map>
				<entry key="defaultCache" value="36000" />
			</map>
		</property> -->
	</bean>
	
		  	<!-- 缓存15分钟 Cache Manager -->
	  <bean id="cacheManagerQuarter" class="org.springframework.data.redis.cache.RedisCacheManager" >
	  	<constructor-arg ref="redisTemplate"/>
	  	<property name="defaultExpiration" value="900"></property>
	  </bean>
	
	  	<!-- declare Never Expiration Cache Manager -->
	  <bean id="cacheManagerEver" class="org.springframework.data.redis.cache.RedisCacheManager" >
	  	<constructor-arg ref="redisTemplate"/>
	  	<property name="defaultExpiration" value="0"></property>
	  </bean>
	  <!-- 缓存一周 -->
	  <bean id="cacheManagerWeek" class="org.springframework.data.redis.cache.RedisCacheManager" >
	  	<constructor-arg ref="redisTemplate"/>
	  	<property name="defaultExpiration" value="604800"></property>
	  </bean>
	
	<bean id="jdpJsonRedisSerializer" class="ths.util.TagJsonRedisSerializer"></bean>
	<!-- <bean id="jdpJsonRedisSerializer" class="ths.jdp.core.cache.JdpJsonRedisSerializer"></bean> -->
	<!-- <bean id="jdpJsonRedisSerializer" class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"></bean> -->
	
	<!-- 过期的用法，不要调用。为兼容老项目，此Bean的配置保留 开始 -->
	<bean id="EhcacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:conf/ehcache.xml" />
	</bean>
	<bean id="jdpCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheName" value="${jdp.default.cache}" />
		<property name="cacheManager" ref="EhcacheManagerFactory" />
	</bean>
	<!-- 过期的用法，不要调用。为兼容老项目，此Bean的配置保留  结束 -->
	
	<bean id="cacheManagerWanWei" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg ref="redisTemplate"/>
		<constructor-arg name="cacheNames">
			<set>
				<value>LOG.CACHE</value>
			</set>
		</constructor-arg>
		<!-- 默认缓存超时时间 10小时-->
		<property name="defaultExpiration" value="36000"></property>
		<!-- 自定义缓存超时时间 15分钟-->
		<property name="expires">
			<map>
				<entry key="defaultCache" value="900"/>
			</map>
		</property>
	</bean>
</beans>
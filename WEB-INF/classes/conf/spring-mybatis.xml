<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:bean="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <tx:annotation-driven transaction-manager="transactionManager" />

 <bean id="vendorProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
    <property name="properties">
      <props>
        <prop key="SQL Server">sqlserver</prop>
        <prop key="DB2">db2</prop>
        <prop key="Oracle">oracle</prop>
        <prop key="MySQL">mysql</prop>
        <prop key="DM DBMS">oracle</prop>
        <prop key="Zenith">oracle</prop>
      </props>
    </property>
  </bean>

  <bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
    <property name="properties" ref="vendorProperties"/>
  </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="databaseIdProvider" ref="databaseIdProvider" />
        <property name="configLocation" value="classpath:conf/mybatis-config.xml"></property>
        <property name="mapperLocations">
            <array>
            	<value>classpath:core_mapper/*.xml</value>
                <value>classpath:portal_mapper/*.xml</value>
                <value>classpath:ou_mapper/*.xml</value>
                <value>classpath:eform_mapper/*.xml</value>
                <value>classpath:bpm_mapper/*.xml</value>
                <value>classpath:component_mapper/**/*.xml</value>
                <value>classpath*:mapper/**/*.xml</value>
                <value>classpath*:dc_mapper/**/*.xml</value><!-- 数据中心mapper文件位置 -->
            </array>
        </property>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
 							reasonable=true
                            <!-- 以下部份为固定方言，专门针对国产数据库-->
                            dialect=oracle
                            autoRuntimeDialect=false
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>


   <!--  <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="ths.jdp.**.dao"/>
        3.2.2版本新特性，markerInterface可以起到mappers配置的作用，详细情况需要看Marker接口类
        <property name="markerInterface" value="ths.jdp.core.mapper.BaseMapper"/>
        通用Mapper通过属性注入进行配置，默认不配置时会注册Mapper<T>接口
        <property name="properties">
            <value>
                mappers=tk.mybatis.mapper.common.Mapper
            </value>
        </property>
       
    </bean> -->

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="ths.**.dao,ths.**.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
</beans>